LIB "derlog.lib";
ring r=0,(u,v,X,Y,Z);
ring r=0,(u,v,X,Y,Z),ds;
ideal i=u,v2,uv;
poly f=eliminate[i,uv][1];
ideal i=u-X,v2-Y,uv-Z;
poly f=eliminate[i,uv][1];
eliminate[i,uv];
elliminate[i,uv];

elliminate(i,uv);
eliminate(i,uv);
poly f=eliminate(i,uv)[1];
ring s=0,(X,Y,Z,T),ds;
poly f=imap(r,f);
f;
derlog(f);
print(derlog(f));
ls
;
ideal i=X,Y,Z;
module kvi=jacob(i)+derlog(f);
module Mlog = derlog(f);
module kvi=jacob(i)+Mlog;
kvi;
vdim(std(kvi));
r;
s;
t;
setring r;
ideal i=u2-X,u5+vu3-Y,v-Z;
poly f=eliminate(i,uv)[1];
ring s=0,(X,Y,Z),ds;
poly f=imap(r,f);
derlog(f);
matrix derlogf = subst(derlog(f),Z,0);
module Mlog = derlogf;
ideal i=X,Y;
module ji=jacob(i);
module kvi=ji+Mlog;
vdim(std(kvi));
basering;
ring t=0,(X,Y),ds;
module kvi=imap(s,kvi);
vdim(std(kvi));
r;
setring r;
ideal i=u-X,v2-Y,uv3-Z;
poly f=eliminate(i,uv)[1];
s;
setring s;
setring r;
ring K=0,(u,v,X,Y,Z,T),ds;
poly f=imap(r,f);
module Mlog=derlog(f);
Mlog;
print(Mlog);
ring S=0,(X,Y,Z,T),ds;
poly f=imap(r,f);
module Mlog=derlog(f);
print(MLog);
print(Mlog);
ideal i=X,Y,Z;
module ji=jacob(i);
module kvi=ji+Mlog;
K;
s;
setring s;
module kvi=imap(S,kvi);
kvi;
print(kvi);
vdim(std(kvi));
r;
setring r;
ideal i=u2,u17+vu3,v;
ideal i=u2-X,u17+vu3-Y,v-Z;
poly f=eliminate(i,uv)[1];
s;
setring s;
poly f=imap(r,f);
module Mlog=derlog(f);
Mlog=subst(Mlog,Z,0);
ideal i=X,Y;
module ji=jacob(i);
t;
setring t;
module kvi=imap(s,ji)+imap(s,Mlog);
kvi;
vdim(std(kvi));
K;
setring K;
ideal i=u,v3+3uv,v4+2uv2;
poly f=eliminate(i,uv)[1];
S;
setring S;
derlog(imap(K,f));
poly f=imap(K,f);
f;
setring K;
ideal i=u-X,v3+3uv-Y,v4+2uv2-Z;
poly f=eliminate(i,uv)[1];
setring S;
derlog(imap(K,f));
module Mlog=derlog(imap(K,f));
Mlog=subst(Mlog,T,0);
ideal i=X,Y,Z;
module ji=jacob(i);
s;
setring s;
module kvi=imap(S,ji)+imap(S,Mlog);
kvi;
vdim(std(kvi));
quit;
