proc cohen(list g, int d)
{
   ring @source = basering;

    if (typeof(g[1]) == "ideal")
    {
        /* Compute the image equation */
        ring @target = char(@source), @x(1..size(g[1])), ds;
        setring @source;

        map @gg = @target, g[1];
        ideal @Z = 0;
        setring @target;

        ideal @ImEq = preimage(@source, @gg, @Z);

        return(cohen(@ImEq[1], d));
    }

    /* Compute the unspecialised quotient */
    ideal @JacIm = jacob(g[1]);
    ideal @I = @JacIm, g[1];
    ideal @JacRed = @JacIm[1..nvars(@source) - d];
    
    /* The Auslander-Buchsbaum formula implies that a finitely generated
     * module M over a commutative Noetherian local ring R is Cohen-Macaulay
     * if and only if codim(M) = pd(M). */

    module @Mg = modulo(@I, @JacRed);
    resolution @L = mres(@Mg,0);

    "// ** Projective dimension: " + string(size(@L));
    "// ** Codimension: " + string(nvars(@source) - dim(std(@Mg)));
}
